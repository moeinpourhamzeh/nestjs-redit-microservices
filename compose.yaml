# services:
#   communication:
#     build:
#       context: .
#       dockerfile: Dockerfile.communication
#     ports:
#       - "3000:3000"
#     environment:
#       REDIS_HOST: localhost
#       REDIS_PORT: 6379
#     networks:
#       - backend_network
#     depends_on:
#       - redis

#   redis:
#     container_name: redis
#     image: redis
#     ports:
#       - 6379:6379
#     networks:
#       - backend_network
#     restart: unless-stopped
#     volumes:
#       - redis:/data

# networks:
#   backend_network:
#     # driver: bridge

services:
  communication:
    build:
      context: .
      dockerfile: Dockerfile.communication
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_USERNAME: default
      REDIS_PASSWORD: secretpassword
    networks:
      - backend_network
    depends_on:
      - redis
  
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_USERNAME: default
      REDIS_PASSWORD: secretpassword
    networks:
      - backend_network
    depends_on:
      - redis

  redis:
    container_name: redis-db
    image: redis:alpine
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: secretpassword
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - redis-data:/data

networks:
  backend_network:
    driver: bridge

volumes:
  redis-data: